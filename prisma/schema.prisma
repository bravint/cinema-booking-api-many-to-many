// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Customer {
  id        Int                       @id @default(autoincrement())
  name      String
  contact   Contact?
  tickets   Ticket[]
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
  seats     SeatsAssignedToCustomer[]
}

model Contact {
  id         Int      @id @default(autoincrement())
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int      @unique
  phone      String
  email      String   @unique
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}

model Movie {
  id          Int         @id @default(autoincrement())
  screenings  Screening[]
  title       String
  runtimeMins Int
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
}

model Screen {
  id         Int         @id @default(autoincrement())
  number     Int
  screenings Screening[]
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  Seat       Seat[]
}

model Screening {
  id        Int      @id @default(autoincrement())
  tickets   Ticket[]
  movie     Movie    @relation(fields: [movieId], references: [id])
  movieId   Int
  screen    Screen   @relation(fields: [screenId], references: [id])
  screenId  Int
  startsAt  DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ticket {
  id          Int       @id @default(autoincrement())
  screening   Screening @relation(fields: [screeningId], references: [id])
  screeningId Int
  customer    Customer  @relation(fields: [customerId], references: [id])
  customerId  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  seat        Seat      @relation(fields: [seatId], references: [id])
  seatId      Int

}

model Seat {
  id        Int                       @id @default(autoincrement())
  number    Int
  screen    Screen                    @relation(fields: [screenId], references: [id])
  screenId  Int
  Ticket    Ticket[]
  createdAt DateTime                  @default(now())
  updatedAt DateTime                  @updatedAt
  customers SeatsAssignedToCustomer[]
}

model SeatsAssignedToCustomer {
  id         Int      @id @default(autoincrement())
  seat       Seat     @relation(fields: [seatId], references: [id])
  seatId     Int
  customer   Customer @relation(fields: [customerId], references: [id])
  customerId Int
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
}
